function [approxI] = getBestK_DCTApprox(I, k)

[n, m] = size(I);
p = ceil((n*m)*k);  
cellCoeAndInfo = cell(1, n*m);
bestKCoeMatrix = zeros(n, m);
coeMatrix = get2D_DCTCoeff(I);

for i = 1:n
    for j = 1:m
        cellArray = zeros(1, 4);
        cellArray(1,1) = abs(coeMatrix(i,j));
        cellArray(1,3) = i;
        cellArray(1,4) = j;
        
        if coeMatrix(i,j) > 0
            cellArray(1,2)  = 1;
        elseif coeMatrix(i,j) < 0
            cellArray(1,2) = -1;
        else 
            cellArray(1,2) = 0;
        end
        cellCoeAndInfo{1, (i-1).*n + j} = cellArray; 
    end
end

sortedCells = mergesort(cellCoeAndInfo, 1);
bestK_SortedCells = sortedCells(1:p);

for i = 1:p
    currentCell = bestK_SortedCells{1,i};
    value = currentCell(1,1);
    sign = currentCell(1,2);
    rowIndex = currentCell(1,3);
    columnIndex = currentCell(1,4);
    trueValue = value.*sign;
    bestKCoeMatrix(rowIndex, columnIndex) = trueValue;
  
end
approxI = getImage(bestKCoeMatrix);
end 